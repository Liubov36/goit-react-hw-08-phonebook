{"version":3,"file":"static/js/284.aeda4045.chunk.js","mappings":"+RAGaA,EAAUC,EAAAA,EAAAA,IAAH,wJASPC,EAAYD,EAAAA,EAAAA,KAAH,iKASTE,EAAYF,EAAAA,EAAAA,MAAH,uGAOTG,EAAYH,EAAAA,EAAAA,MAAH,qSAgBTI,EAAeJ,EAAAA,EAAAA,OAAH,8aAqBZK,EAAQL,EAAAA,EAAAA,IAAH,4HAQLM,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,gJ,oBCxDjBQ,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,MAAM,sBAC1BC,SAAUH,EAAAA,KAAaI,IAAI,GAAGC,SAAS,0BAG5BC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WAER,OADAL,GAASM,EAAAA,EAAAA,IAAiBJ,IACnB,WACLF,GAASM,EAAAA,EAAAA,IAAiB,MAC3B,CACF,IAED,IAAMC,EAAe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BT,GAASU,EAAAA,EAAAA,IAAMF,IACD,OAAVN,GACFO,GAEH,EAGD,OACE,UAAC1B,EAAD,YACA,SAAC,KAAD,CACI4B,cAAe,CAAEhB,MAAO,GAAIC,SAAU,IACtCgB,SAAUL,EACVM,iBAAkBrB,EAHtB,UAKE,UAACP,EAAD,CAAW2B,SAAUL,EAAcO,aAAa,MAAhD,WACE,UAAC5B,EAAD,oBAEE,SAACC,EAAD,CAAW4B,KAAK,QAAQC,KAAK,QAAQC,YAAY,iBACjD,SAAC3B,EAAD,CAAY0B,KAAK,QAAQE,UAAU,YAErC,UAAChC,EAAD,uBAEE,SAACC,EAAD,CAAW4B,KAAK,WAAWC,KAAK,WAAYC,YAAY,oBACxD,SAAC3B,EAAD,CAAY0B,KAAK,WAAWE,UAAU,YAExC,SAAC9B,EAAD,CAAc2B,KAAK,SAAnB,yBAGDb,IACC,SAACb,EAAD,wFAOP,ECnEc,SAAS8B,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAACrB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.nav`\n  max-width: 1280px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n`;\n\nexport const FormLogin = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nexport const FormLabel = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 5px 10px;\n  font-size: 14px;\n  color: #000;\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const ButtonSubmit = styled.button`\n  margin-top: 30px;\n  padding: 10px;\n  width: 200px;\n  font-weight: 500;\n  font-size: 20px;\n  color: #fff;\n  background-color: #0084ff;\n  border: none;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color, color 250ms linear;\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\nexport const Error = styled.div`\n  text-align: center;\n  color: red;\n  margin-top: 15px;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const InputError = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n  margin-bottom: 15px;\n  font-weight: 500;\n  font-size: 16px;\n`;","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../redux/auth/operation';\nimport { selectLogInError } from '../../redux/auth/selectors';\nimport { updateErrorLogIn } from '../../redux/auth/slice';\nimport {\n  Wrapper,\n  FormLogin,\n  FormLabel,\n  FormInput,\n  ButtonSubmit,\n  Error,\n  InputError,\n} from './LoginForm.styled';\nimport { useEffect } from 'react';\n\nconst schema = yup.object().shape({\n  email: yup.string().email('Not a proper email'),\n  password: yup.string().min(6).required('Password is required'),\n});\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectLogInError);\n\n  useEffect(() => {\n    dispatch(updateErrorLogIn(error));\n    return () => {\n      dispatch(updateErrorLogIn(null));\n    };\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(logIn(values));\n    if (error !== null) {\n      resetForm();\n    }\n  };\n\n\n  return (\n    <Wrapper>\n    <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n      <FormLogin onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormLabel>\n          Email\n          <FormInput type=\"email\" name=\"email\" placeholder=\"Enter email\" />\n          <InputError name=\"email\" component=\"div\" />\n        </FormLabel>\n        <FormLabel>\n          Password\n          <FormInput type=\"password\" name=\"password\"  placeholder=\"Enter password\" />\n          <InputError name=\"password\" component=\"div\" />\n        </FormLabel>\n        <ButtonSubmit type=\"submit\">Log In</ButtonSubmit>\n      </FormLogin>\n      </Formik>\n      {error && (\n        <Error>\n          Are you registered? If yes, check the data you entered, if no,\n          register\n        </Error>\n      )}\n    </Wrapper>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}"],"names":["Wrapper","styled","FormLogin","FormLabel","FormInput","ButtonSubmit","Error","InputError","ErrorMessage","schema","yup","shape","email","password","min","required","LoginForm","dispatch","useDispatch","error","useSelector","selectLogInError","useEffect","updateErrorLogIn","handleSubmit","values","resetForm","logIn","initialValues","onSubmit","validationSchema","autoComplete","type","name","placeholder","component","Login","Helmet"],"sourceRoot":""}