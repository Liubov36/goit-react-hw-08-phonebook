{"version":3,"file":"static/js/158.19828814.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","redux/contacts/selectors.js","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/ContactEditor/ContactEditor.styled.jsx","components/ContactEditor/ContactEditor.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactData = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Icon = styled.span`\n  height: 30px;\n  width: 30px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #0084ff3d;\n  margin-right: 15px;\n  padding: 5px;\n  border-radius: 3px;\n  color: inherit;\n`;\n\nexport const ContactName = styled.p`\n  font-weight: 700;\n  margin-right: 15px;\n`;\n\nexport const ContactNumber = styled.p`\n  font-weight: 700;\n  margin-right: 30px;\n`;\n\nexport const Button = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 35px;\n  height: 35px;\n  padding: 5px;\n  border: none;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: background-color 300ms linear;\n  &:hover,\n  &:focus {\n    background-color: #0084ff;\n  }\n`;","import { useDispatch } from 'react-redux';\nimport { FaTrash, FaUserTie } from 'react-icons/fa';\n\nimport {\n  ContactData,\n  ContactName,\n  ContactNumber,\n  Button,\n  Icon,\n} from './Contacts.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const Contact = ({ contactID, name, number }) => {\n  const dispatch = useDispatch();\n  console.log('contactID', contactID);\n  return (\n    <>\n      <ContactData>\n        <Icon>\n          <FaUserTie />\n        </Icon>\n        <ContactName>{name}</ContactName>\n      </ContactData>\n      <ContactData>\n        <ContactNumber>{number}</ContactNumber>\n        <Button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(contactID))}\n        >\n          <Icon>\n            <FaTrash />\n          </Icon>\n        </Button>\n      </ContactData>\n    </>\n  );\n};\n\n// Contact.prototype = {\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contats.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectItems, selectFilter],\n  (items, setFilter) => {\n    switch (setFilter) {\n      case setFilter:\n        return items.filter(contact =>\n          contact.name.toLowerCase().includes(setFilter)\n        );\n      default:\n        return items;\n    }\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const List = styled.li`\n  width: 450px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 15px;\n  :last-child {\n    margin-bottom: 0;\n  }\n`;","import { useSelector } from 'react-redux';\nimport { Contact } from '../Contacts/Contacts';\n// import { selectItems } from '../../redux/contacts/selectors';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\nimport { List } from './ContactsList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    contacts && (\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <List key={id}>\n            <Contact name={name} number={number} contactID={id} />\n          </List>\n        ))}\n      </ul>\n    )\n  );\n};","import styled from '@emotion/styled';\n\nexport const FormEditor = styled.form`\n  width: 400px;\n  margin-bottom: 35px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const Title = styled.span`\n  font-weight: 700;\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  /* width: 800px; */\n  padding: 5px 10px;\n  font-size: 14px;\n  color: #000;\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Button = styled.button`\n  margin: 15px;\n  height: 50px;\n  width: 200px;\n  font-weight: 500;\n  font-size: 24px;\n  color: #fff;\n  background-color: #0084ff;\n  border: none;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color, color 250ms linear;\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectItems } from '../../redux/contacts/selectors';\nimport {\n  FormEditor,\n  Label,\n  Title,\n  Input,\n  Button,\n} from './ContactEditor.styled';\nimport { Report } from 'notiflix';\n\nexport const ContactEditor = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectItems);\n  const dispatch = useDispatch();\n\n  const onChangeName = e => setName(e.currentTarget.value);\n  const onChangeNumber = e => setNumber(e.currentTarget.value);\n\n  const onSubmitForm = e => {\n    e.preventDefault();\n    const newContact = { name, number };\n\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Report.warning(\n        `${name}`,\n        'This user is already in the contact list.',\n        'OK'\n      );\n      return;\n    }\n\n    dispatch(addContact(newContact));\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <FormEditor onSubmit={onSubmitForm}>\n      <Label>\n        <Title>Name</Title>\n        <Input\n          onChange={onChangeName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        <Title>Number</Title>\n        <Input\n          onChange={onChangeNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </FormEditor>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 10px;\n`;\n\nexport const Title = styled.h2`\n  margin-bottom: 23px;\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.2;\n  align-items: center;\n`;\nexport const Text = styled.p`\n  font-weight: 500;\n  padding: 10px;\n`;\n\nexport const Input = styled.input`\n  height: 40px;\n  padding: 5px 10px;\n  font-size: 14px;\n  color: inherit;\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nimport { Label, Title, Text, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = e => {\n    e.preventDefault();\n\n    const { value } = e.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <>\n      <Title>Sort contacts:</Title>\n      <Label>\n        <Text>Input search query</Text>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n          placeholder=\"Start to enter contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        />\n      </Label>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  handleChange: PropTypes.func,\n  QueryInputId: PropTypes.func,\n};","import styled from '@emotion/styled';\n\nexport const MainContainer = styled.main`\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex: auto;\n`;\n\nexport const Container = styled.section`\n  position: relative;\n  margin: 0 auto;\n  padding: 0 35px;\n  max-width: 1280px;\n`;\n\nexport const BoxContacts = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding-top: 60px;\n  padding-bottom: 60px;\n`;\n\nexport const Wrapper = styled.div`\n  margin-right: 100px;\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const WrapperFilter = styled.div`\n  width: 400px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from '../../components/ContactsList/ContactsList';\nimport { ContactEditor } from '../../components/ContactEditor/ContactEditor';\nimport { Filter } from '../../components/Filter/Filter';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { selectIsLoading, selectItems, selectError } from '../../redux/contacts/selectors';\nimport {\n  BoxContacts,\n  MainContainer,\n  Container,\n  Wrapper,\n  WrapperFilter,\n} from './Contacts.styled';\nimport { Spinner } from 'components/Spinner/Spinner';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const items = useSelector(selectItems);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <MainContainer>\n        <Container>\n          <BoxContacts>\n            <Wrapper>\n              <ContactEditor />\n              {items.length > 0 && (\n             <>\n               <h2>Contacts</h2>\n              <Filter />\n             </>\n                )}\n              {/* <div>{isLoading && 'Request in progress...'}</div> */}\n              <div>{isLoading && !error && <Spinner />}</div>\n              <ContactList />\n            </Wrapper>\n            <WrapperFilter>\n              <Filter />\n            </WrapperFilter>\n          </BoxContacts>\n          {error && <p> {error} </p>}\n        </Container>\n      </MainContainer>\n    </>\n  );\n}"],"names":["ContactData","styled","Icon","ContactName","ContactNumber","Button","Contact","contactID","name","number","dispatch","useDispatch","console","log","type","onClick","deleteContact","selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","contats","filter","selectVisibleContacts","createSelector","setFilter","contact","toLowerCase","includes","List","ContactList","useSelector","map","id","FormEditor","Label","Title","Input","ContactEditor","useState","setName","setNumber","resetForm","onSubmit","e","preventDefault","newContact","some","Report","addContact","onChange","currentTarget","value","pattern","title","required","Text","Filter","target","placeholder","MainContainer","Container","BoxContacts","Wrapper","WrapperFilter","Contacts","useEffect","fetchContacts","length","Spinner"],"sourceRoot":""}