{"version":3,"file":"static/js/427.b47ccc4e.chunk.js","mappings":"oPAGaA,EAAUC,EAAAA,EAAAA,IAAH,wJAQPC,EAAOD,EAAAA,EAAAA,KAAH,iKASJE,EAAQF,EAAAA,EAAAA,MAAH,uGAOLG,EAAOH,EAAAA,EAAAA,KAAH,uGAOJI,EAAQJ,EAAAA,EAAAA,MAAH,qSAgBLK,EAASL,EAAAA,EAAAA,OAAH,8a,UC1BNM,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAgCjB,OACE,SAACT,EAAD,WAME,UAACE,EAAD,CAAMQ,SApBS,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAS,CACPC,KAAMH,EAAKI,SAASD,KAAKE,MACzBC,MAAON,EAAKI,SAASE,MAAMD,MAC3BE,SAAUP,EAAKI,SAASG,SAASF,QAItC,EASiCG,aAAa,MAA3C,WACE,UAAClB,EAAD,YACE,SAACC,EAAD,wBACA,SAACC,EAAD,CACEiB,KAAK,OACLN,KAAK,OACLO,YAAY,aACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAKZ,UAACvB,EAAD,YACE,SAACC,EAAD,qBACA,SAACC,EAAD,CACEiB,KAAK,QACLN,KAAK,QACLO,YAAY,cACZC,QAAQ,iDAKZ,UAACrB,EAAD,YACE,SAACC,EAAD,wBACA,SAACC,EAAD,CAAOiB,KAAK,WAAWN,KAAK,WAAYO,YAAY,uBAGtD,SAACjB,EAAD,CAAQgB,KAAK,SAAb,0BAUP,ECrGc,SAASK,IACtB,OACE,iCACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACrB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n// import { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n`;\nexport const Form = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 12px;\n  opacity: 0.8;\n`;\n\nexport const Input = styled.input`\n  padding: 5px 10px;\n  font-size: 14px;\n  color: #000;\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-top: 30px;\n  padding: 10px;\n  width: 200px;\n  font-weight: 500;\n  font-size: 20px;\n  color: #fff;\n  background-color: #0084ff;\n  border: none;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color, color 250ms linear;\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\n\n// export const Error = styled.div`\n//   text-align: center;\n//   color: red;\n//   margin-top: 15px;\n//   font-weight: 500;\n//   font-size: 20px;\n// `;\n\n// export const InputError = styled(ErrorMessage)`\n//   width: 300px;\n//   text-align: center;\n//   color: red;\n//   margin-bottom: 15px;\n//   font-weight: 500;\n//   font-size: 16px;\n// `;","// import { Formik } from 'formik';\n// import * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/operation';\n// import { selectRegisterError } from '../../redux/auth/selectors';\n// import { updateErrorRegister } from '../../redux/auth/slice';\n// import { useEffect } from 'react';\nimport {\n  Wrapper,\n  Form,\n  Label,\n  Span,\n  Input,\n  Button,\n//   Error,\n//   InputError,\n} from './RegisterForm.styled';\n\n// const schema = yup.object().shape({\n//     name: yup.string().required(),\n//     email: yup.string().email('Not a proper email'),\n//     password: yup.string().min(6).required('Password is required'),\n//   });\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n//   const error = useSelector(selectRegisterError);\n\n//   useEffect(() => {\n//     dispatch(updateErrorRegister(error));\n//     return () => {\n//       dispatch(updateErrorRegister(null));\n//     };\n//   });\n\n//   const handleSubmit = (values, { resetForm }) => {\n//     dispatch(register(values));\n\n//     if (error !== null) {\n//       resetForm();\n//     }\n//   };\n\nconst handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      register({\n        name: form.elements.name.value,\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    // form.reset();\n  };\n\n  return (\n    <Wrapper>\n    {/* <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      > */}\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          <Span>Username</Span>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\" \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          {/* <InputError name=\"name\" component=\"div\" /> */}\n        </Label>\n\n        <Label>\n          <Span>Email</Span>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n           {/* <InputError name=\"email\" component=\"div\" /> */}\n        </Label>\n\n        <Label>\n          <Span>Password</Span>\n          <Input type=\"password\" name=\"password\"  placeholder=\"Enter password\" />\n          {/* <InputError name=\"password\" component=\"div\" /> */}\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n      {/* </Formik>\n      {error && (\n        <Error>\n          Your data isn`t valid. Please, check correctness and try again\n        </Error>\n      )} */}\n    </Wrapper>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n}"],"names":["Wrapper","styled","Form","Label","Span","Input","Button","RegisterForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","register","name","elements","value","email","password","autoComplete","type","placeholder","pattern","title","required","Register","Helmet"],"sourceRoot":""}