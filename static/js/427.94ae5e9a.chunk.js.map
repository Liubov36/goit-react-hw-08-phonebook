{"version":3,"file":"static/js/427.94ae5e9a.chunk.js","mappings":"2SAGaA,EAAUC,EAAAA,EAAAA,IAAH,wJAQPC,EAAOD,EAAAA,EAAAA,KAAH,iKASJE,EAAQF,EAAAA,EAAAA,MAAH,uGAOLG,EAAOH,EAAAA,EAAAA,KAAH,uGAOJI,EAAQJ,EAAAA,EAAAA,MAAH,qSAgBLK,EAASL,EAAAA,EAAAA,OAAH,8aAsBNM,EAAQN,EAAAA,EAAAA,IAAH,4HAQLO,GAAaP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,gJ,UC9DjBS,EAASC,EAAAA,KAAaC,MAAM,CAC9BC,KAAMF,EAAAA,KAAaG,WACnBC,MAAOJ,EAAAA,KAAaI,MAAM,sBAC1BC,SAAUL,EAAAA,KAAaM,IAAI,GAAGH,SAAS,0BAG9BI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WAER,OADAL,GAASM,EAAAA,EAAAA,IAAoBJ,IACtB,WACLF,GAASM,EAAAA,EAAAA,IAAoB,MAC9B,CACF,IAED,IAAMC,EAAe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BT,GAASU,EAAAA,EAAAA,IAASF,IAEJ,OAAVN,GACFO,GAEH,EAED,OACE,UAAC5B,EAAD,YACA,SAAC,KAAD,CACI8B,cAAe,CAAEjB,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDe,SAAUL,EACVM,iBAAkBtB,EAHtB,UAKE,UAACR,EAAD,CAAM6B,SAAUL,EAAcO,aAAa,MAA3C,WACE,UAAC9B,EAAD,YACE,SAACC,EAAD,wBACA,SAACC,EAAD,CACE6B,KAAK,OACLrB,KAAK,OACLsB,YAAY,aACZC,QAAQ,yHACRC,MAAM,yIACNvB,UAAQ,KAEV,SAACN,EAAD,CAAYK,KAAK,OAAOyB,UAAU,YAGpC,UAACnC,EAAD,YACE,SAACC,EAAD,qBACA,SAACC,EAAD,CACE6B,KAAK,QACLrB,KAAK,QACLsB,YAAY,cACZC,QAAQ,8CAET,SAAC5B,EAAD,CAAYK,KAAK,QAAQyB,UAAU,YAGtC,UAACnC,EAAD,YACE,SAACC,EAAD,wBACA,SAACC,EAAD,CAAO6B,KAAK,WAAWrB,KAAK,WAAYsB,YAAY,oBACpD,SAAC3B,EAAD,CAAYK,KAAK,WAAWyB,UAAU,YAExC,SAAChC,EAAD,CAAQ4B,KAAK,SAAb,2BAGDb,IACC,SAACd,EAAD,+EAMP,ECxFc,SAASgC,IACtB,OACE,iCACE,SAACC,EAAA,EAAD,WACE,+CAEF,SAACtB,EAAD,MAGL,C","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.nav`\n  max-width: 1280px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n`;\nexport const Form = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nexport const Label = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 12px;\n  opacity: 0.8;\n`;\n\nexport const Input = styled.input`\n  padding: 5px 10px;\n  font-size: 14px;\n  color: #000;\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-top: 30px;\n  padding: 10px;\n  width: 200px;\n  font-weight: 500;\n  font-size: 20px;\n  color: #fff;\n  background-color: #0084ff;\n  border: none;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color, color 250ms linear;\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\n\nexport const Error = styled.div`\n  text-align: center;\n  color: red;\n  margin-top: 15px;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const InputError = styled(ErrorMessage)`\n  width: 300px;\n  text-align: center;\n  color: red;\n  margin-bottom: 15px;\n  font-weight: 500;\n  font-size: 16px;\n`;","import { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { register } from '../../redux/auth/operation';\nimport { selectRegisterError } from '../../redux/auth/selectors';\nimport { updateErrorRegister } from '../../redux/auth/slice';\nimport { useEffect } from 'react';\nimport {\n  Wrapper,\n  Form,\n  Label,\n  Span,\n  Input,\n  Button,\n  Error,\n  InputError,\n} from './RegisterForm.styled';\n\nconst schema = yup.object().shape({\n    name: yup.string().required(),\n    email: yup.string().email('Not a proper email'),\n    password: yup.string().min(6).required('Password is required'),\n  });\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const error = useSelector(selectRegisterError);\n\n  useEffect(() => {\n    dispatch(updateErrorRegister(error));\n    return () => {\n      dispatch(updateErrorRegister(null));\n    };\n  });\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(register(values));\n\n    if (error !== null) {\n      resetForm();\n    }\n  };\n\n  return (\n    <Wrapper>\n    <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      >\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label>\n          <Span>Username</Span>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Enter name\" \n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <InputError name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          <Span>Email</Span>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Enter email\"\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n          />\n           <InputError name=\"email\" component=\"div\" />\n        </Label>\n\n        <Label>\n          <Span>Password</Span>\n          <Input type=\"password\" name=\"password\"  placeholder=\"Enter password\" />\n          <InputError name=\"password\" component=\"div\" />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </Form>\n      </Formik>\n      {error && (\n        <Error>\n          Your data isn`t valid. Please, check correctness and try again\n        </Error>\n      )}\n    </Wrapper>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function Register() {\n  return (\n    <>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </>\n  );\n}"],"names":["Wrapper","styled","Form","Label","Span","Input","Button","Error","InputError","ErrorMessage","schema","yup","shape","name","required","email","password","min","RegisterForm","dispatch","useDispatch","error","useSelector","selectRegisterError","useEffect","updateErrorRegister","handleSubmit","values","resetForm","register","initialValues","onSubmit","validationSchema","autoComplete","type","placeholder","pattern","title","component","Register","Helmet"],"sourceRoot":""}