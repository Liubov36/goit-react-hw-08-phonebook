{"version":3,"file":"static/js/284.04f5f714.chunk.js","mappings":"iPAGaA,EAAUC,EAAAA,EAAAA,IAAH,wJASPC,EAAYD,EAAAA,EAAAA,KAAH,iKASTE,EAAYF,EAAAA,EAAAA,MAAH,uGAOTG,EAAYH,EAAAA,EAAAA,MAAH,qSAgBTI,EAAeJ,EAAAA,EAAAA,OAAH,8a,UCtBZK,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MA8BjB,OACE,SAACR,EAAD,WAME,UAACE,EAAD,CAAWO,SApBI,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,GACEO,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,QAItC,EAUsCE,aAAa,MAAhD,WACE,UAAChB,EAAD,oBAEE,SAACC,EAAD,CAAWgB,KAAK,QAAQC,KAAK,QAAQC,YAAY,oBAGnD,UAACnB,EAAD,uBAEE,SAACC,EAAD,CAAWgB,KAAK,WAAWC,KAAK,WAAYC,YAAY,uBAG1D,SAACjB,EAAD,CAAce,KAAK,SAAnB,wBAWP,EC/Ec,SAASG,IACtB,OACE,4BACE,SAACC,EAAA,EAAD,WACE,wCAEF,SAAClB,EAAD,MAGL,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n// import { ErrorMessage } from 'formik';\n\nexport const Wrapper = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 15px;\n`;\n\nexport const FormLogin = styled.form`\n  width: 400px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n`;\n\nexport const FormLabel = styled.label`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 5px 10px;\n  font-size: 14px;\n  color: #000;\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n  :focus {\n    border-color: rgb(111, 111, 207);\n  }\n  ::placeholder {\n    font-size: 12px;\n    color: rgba(0, 0, 0, 0.75);\n  }\n`;\n\nexport const ButtonSubmit = styled.button`\n  margin-top: 30px;\n  padding: 10px;\n  width: 200px;\n  font-weight: 500;\n  font-size: 20px;\n  color: #fff;\n  background-color: #0084ff;\n  border: none;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color, color 250ms linear;\n  :hover,\n  :focus {\n    background-color: #000cb6b7;\n    color: #000;\n  }\n`;\n// export const Error = styled.div`\n//   text-align: center;\n//   color: red;\n//   margin-top: 15px;\n//   font-weight: 500;\n//   font-size: 20px;\n// `;\n\n// export const InputError = styled(ErrorMessage)`\n//   width: 300px;\n//   text-align: center;\n//   color: red;\n//   margin-bottom: 15px;\n//   font-weight: 500;\n//   font-size: 16px;\n// `;","// import { Formik } from 'formik';\n// import * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from '../../redux/auth/operation';\n// import { selectLogInError } from '../../redux/auth/selectors';\n// import { updateErrorLogIn } from '../../redux/auth/slice';\nimport {\n  Wrapper,\n  FormLogin,\n  FormLabel,\n  FormInput,\n  ButtonSubmit,\n//   Error,\n//   InputError,\n} from './LoginForm.styled';\n// import { useEffect } from 'react';\n\n// const schema = yup.object().shape({\n//   email: yup.string().email('Not a proper email'),\n//   password: yup.string().min(6).required('Password is required'),\n// });\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n//   const error = useSelector(selectLogInError);\n\n//   useEffect(() => {\n//     dispatch(updateErrorLogIn(error));\n//     return () => {\n//       dispatch(updateErrorLogIn(null));\n//     };\n//   });\n\n//   const handleSubmit = (values, { resetForm }) => {\n//     dispatch(logIn(values));\n//     if (error !== null) {\n//       resetForm();\n//     }\n//   };\n\nconst handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    // form.reset();\n  };\n\n\n  return (\n    <Wrapper>\n    {/* <Formik\n        initialValues={{ email: '', password: '' }}\n        onSubmit={handleSubmit}\n        validationSchema={schema}\n      > */}\n      <FormLogin onSubmit={handleSubmit} autoComplete=\"off\">\n        <FormLabel>\n          Email\n          <FormInput type=\"email\" name=\"email\" placeholder=\"Enter email\" />\n          {/* <InputError name=\"email\" component=\"div\" /> */}\n        </FormLabel>\n        <FormLabel>\n          Password\n          <FormInput type=\"password\" name=\"password\"  placeholder=\"Enter password\" />\n          {/* <InputError name=\"password\" component=\"div\" /> */}\n        </FormLabel>\n        <ButtonSubmit type=\"submit\">Log In</ButtonSubmit>\n      </FormLogin>\n      {/* </Formik>\n      {error && (\n        <Error>\n          Are you registered? If yes, check the data you entered, if no,\n          register\n        </Error>\n      )} */}\n    </Wrapper>\n  );\n};","import { Helmet } from 'react-helmet';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return (\n    <div>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <LoginForm />\n    </div>\n  );\n}"],"names":["Wrapper","styled","FormLogin","FormLabel","FormInput","ButtonSubmit","LoginForm","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","autoComplete","type","name","placeholder","Login","Helmet"],"sourceRoot":""}